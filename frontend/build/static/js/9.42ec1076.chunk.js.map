{"version":3,"sources":["components/Home/Contact/Contact.js"],"names":["Alert","props","elevation","variant","useStyles","makeStyles","input","backgroundColor","borderRadius","width","color","transform","borderColor","border","button","padding","fontSize","snackbar","Contact","text","useState","open","setOpen","message","setMessage","success","setSuccess","loading","setLoading","classes","errorObject","email","name","content","subject","setName","setEmail","setSubject","setContent","error","setError","handleClick","handleClose","event","reason","resetFields","className","id","title","style","marginBottom","subtitle","subtitle2","textAlign","talk","htmlFor","value","onChange","e","target","label","placeholders","inputProps","textTransform","multiline","rows","onClick","preventDefault","errorWarn","data","axios","method","url","then","response","status","errorSuccess","errorError","submitEmail","infoTitle","aria-label","rel","href","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity"],"mappings":"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","file":"static/js/9.42ec1076.chunk.js","sourcesContent":["\nimport React, {useState} from 'react';\nimport axios from 'axios'\nimport './Contact.scss'\nimport { FaLinkedinIn } from 'react-icons/fa';\nimport {SiUpwork} from 'react-icons/si'\nimport {SiFrontendmentor} from 'react-icons/si'\nimport { FaGithub } from 'react-icons/fa';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextField from '@material-ui/core/TextField';\nimport 'aos/dist/aos.css';\nimport {\n    makeStyles,\n\n} from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles({\n    input: {\n        backgroundColor:'white',\n        borderRadius:'10px',\n        width:'100%',\n        '& label.Mui-focused': {\n            color: 'white',\n            },\n            '& label.MuiFormLabel-filled': {\n            color: 'white',\n            },\n            '& label.MuiFormLabel-root': {\n                '&.MuiInputLabel-shrink' :{\n                    transform:'translate(4px, -30px) scale(1.3) !important',\n                }\n            },\n        '& .MuiOutlinedInput-root': {\n        '& fieldset': {\n            borderColor: 'none',\n        /*    backgroundColor:'white', */\n        },\n        '&:hover fieldset': {\n            borderColor: 'none',\n\n        },\n\n        '&.Mui-focused fieldset': {\n            border: 'none',\n            color:'white',\n        },\n /*        '&.MuiInputLabel-shrink': {\n            transform:'translate (1px, 1px) scale(0.75)'\n            }, */\n        '&.MuiInputLabel-shrink':{\n                transform:'translate(4px, -30px) scale(1.3)',\n            }\n        },\n    },\n    button: {\n        backgroundColor:'white',\n        color:'black',\n        padding:'1rem 2rem',\n        fontSize:'1.2rem',\n        '&:hover' : {\n            backgroundColor:'#999999;',\n        },\n /*        '&.MuiButton-containedPrimary':{\n            backgroundColor:'white'\n        } */\n        '&. .MuiButton-containedPrimary:hover': {\n            backgroundColor:'white'\n        },\n    },\n    snackbar: {\n       \n        '&. .MuiAlert-root ' : {\n            padding:'2rem 4rem',\n            fontSize:'3rem'\n        }\n    }\n});\n\n\n\nconst Contact = (props) => {\n    let {text} = props;\n    const [open, setOpen] = useState(false);\n    const [message, setMessage] = useState('');\n    const [success, setSuccess] = useState('success');\n    const [loading, setLoading] = useState(false);\n    const classes = useStyles();\n    const errorObject = {\n        email: '',\n        name:'',\n        content:'',\n        subject:''\n    } \n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [subject, setSubject] = useState('')\n    const [content, setContent] = useState('')\n    const [error, setError] = useState(errorObject)\n\n    const handleClick = () => {\n        setOpen(true);\n        };\n\n        const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    const submitEmail = (e) => {\n        e.preventDefault();\n        setLoading(true)\n        if(name === '' || email === '' || subject === '' || content === '' || error === ''){\n            handleClick()\n            setMessage(text.errorWarn)\n            setSuccess('warning')\n            setLoading(false)\n            return;\n        }else {\n            setError(errorObject)\n            resetFields()\n            let data = {\n                name: name,\n                email:email,\n                subject:subject,\n                text:content,\n            }\n            axios({\n                method: \"POST\", \n                url:\"https://inspiring-golick-682ae8.netlify.app/contacto\", \n                data: data,\n                }).then((response)=>{\n                if (response.data.status === 'sent'){\n                    handleClick()\n                    setMessage(text.errorSuccess)\n                    setSuccess('success')\n                    setLoading(false)\n                }else if(response.data.status === 'failed'){\n                    handleClick()\n                    setMessage(text.errorError)\n                    setSuccess('error')\n                    setLoading(false)\n                }\n            })\n\n        }\n \n\n   \n    }\n\n/*     const toggleError = () => {\n        let objectArr = [\n            {propName:'name', prop:name},\n            {propName:'email', prop:email},\n            {propName:'content', prop:content},\n            {propName:'subject', prop:subject},\n        ]\n        let errorObject = {...error}\n        for (let index = 0; index < objectArr.length; index++) {\n            let element = objectArr[index]\n            if(objectArr[index].prop === ''){\n                errorObject = {\n                    ...errorObject,\n                    [element.propName]:'This field cannot be empty'\n                } \n                console.log(errorObject)\n            }else{\n                errorObject = {\n                    ...errorObject,\n                    [element.propName]:''\n                } \n            }\n        }\n        return errorObject\n\n\n    } */\n\n    const resetFields = () => {\n        setName('')\n        setEmail('')\n        setSubject('')\n        setContent('')\n    }\n\n    return(\n        <div className=\"contact-container mt-5\" id=\"contact\">\n            <p className=\"heading-1\"\n            /* data-aos=\"fade-right\"\n            data-aos-offset=\"200\"\n            data-aos-delay=\"50\"\n            data-aos-duration=\"1000\"\n            data-aos-easing=\"ease\"\n            data-aos-mirror=\"false\"\n            data-aos-once=\"false\" */>{text.title}</p>\n            {/*     <div className=\"row\">\n                    <div className=\"col p-0\">\n                        <p className=\"proyect-text\">Have any project in mind?</p>\n                        <p className=\"proyect-text\">Any ideas?</p>\n                        <p style={{textAlign:'left'}} className=\"subtitle mt-3\">Let´s talk!</p>\n                    </div>\n                    <div className=\"col\"></div>\n                </div> */}\n\n                <div className=\"about-subContainer mb-0\"\n                /* data-aos=\"fade-up\"\n                data-aos-offset=\"200\"\n                data-aos-delay=\"50\"\n                data-aos-duration=\"1200\"\n                data-aos-easing=\"ease-in\"\n                data-aos-mirror=\"false\"\n                data-aos-once=\"false\" */>\n                <div className=\"text-container about-textContainer \">\n                    <div style={{marginBottom:'5rem'}}>\n                        <p className=\"proyect-text\">{text.subtitle}</p>\n                        <p className=\"proyect-text\">{text.subtitle2}</p>\n                        <p style={{textAlign:'left'}} className=\"subtitle mt-3\">{text.talk}</p>\n                    </div>\n                    <form className=\"mt-5\">\n                        <div className=\"row w-100 \" style={{marginBottom:'4rem'}}>\n                            <div className=\"col w-50\">\n                                <label htmlFor=\"name\">Name</label>\n                                <TextField\n                                id=\"name\"\n                                className={classes.input} \n                                value={name} onChange={(e)=>setName(e.target.value)} \n                                label={text.placeholders.name} \n                                variant=\"outlined\"\n                                inputProps={{ style: { textTransform: \"capitalize\" } }} />\n                                <p className=\"error\">{error.name}</p>\n                            </div>\n                            <div className=\"col w-50\">\n                                <label htmlFor=\"email\">email</label>\n                                <TextField \n                                id=\"email\"\n                                className={classes.input} \n                                value={email}  \n                                onChange={(e)=>setEmail(e.target.value)} \n                                label={text.placeholders.email}  \n                                variant=\"outlined\" />\n                                <p className=\"error\">{error.email}</p>\n                            </div>\n                        </div>\n                        <div className=\"row w-100\" style={{marginBottom:'4rem'}}>\n                            <div className=\"col \">\n                            <label htmlFor=\"subject\">subject</label>\n                                <TextField \n                                id=\"subject\"\n                                className={classes.input} \n                                value={subject}  \n                                onChange={(e)=>setSubject(e.target.value)} \n                                label={text.placeholders.subject}  \n                                variant=\"outlined\" \n                                inputProps={{ style: { textTransform: \"capitalize\" } }}/>\n                                <p className=\"error\">{error.subject}</p>\n                            </div>\n                        </div>\n                        <div className=\"row w-100 mb-3 mt-3\">\n                            <div className=\"col\">\n                                <label htmlFor=\"content\">content</label>\n                                <TextField \n                                id=\"content\"\n                                multiline\n                                rows={4}\n                                value={content}\n                                className={classes.input} \n                                onChange={(e)=>setContent(e.target.value)} \n                                label={text.placeholders.message} \n                                variant=\"outlined\"/>\n                                <p className=\"error\">{error.content}</p>\n                            </div>\n                        </div>\n                        <div className=\"row w-100\">\n                            <div className=\"col mb-4 w-100 d-flex justify-content-end\">\n                                <Button onClick={(e)=>submitEmail(e)} variant=\"contained\" className={classes.button} color=\"primary\"\n                                >\n                                    {loading ? \n                                        <CircularProgress /> : 'Send'\n                                    }\n                                </Button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <div className=\"contact-info-container align-items-center justify-content-center\">\n                    <p style={{textAlign:'left', fontSize:'2rem'}} className=\"subtitle mt-3\">{text.infoTitle}</p>\n                    <p className=\"proyect-text mt-5\" style={{fontSize:'1.5rem'}}>mariapena@gmail.com</p>\n                    <p className=\"proyect-text mt-3\" style={{textAlign:'left', fontSize:'1.5rem'}}>+54 9 11 4176-6805</p>\n                    <div className=\"icon-container mt-5\">\n                    <span><a  aria-label=\"linkedin\" rel=\"noreferrer\" target=\"_blank\" href=\"https://www.linkedin.com/in/maria-pe%C3%B1a-721b531a3/\"><FaLinkedinIn className=\"social-icons\"/></a></span>\n                            <span><a  aria-label=\"github\" rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/mariapenaa\"><FaGithub className=\"social-icons\"/></a></span>\n                            <span><a  aria-label=\"frontend mentor\" rel=\"noreferrer\" target=\"_blank\" href=\"https://www.frontendmentor.io/profile/mariapenaa\"><SiFrontendmentor className=\"social-icons\"/></a></span>\n                            <span><a  aria-label=\"upwork\" rel=\"noreferrer\" target=\"_blank\" href=\"https://www.upwork.com/freelancers/mariapenadev\"><SiUpwork className=\"social-icons\"/></a></span>\n                    </div>\n                </div>\n            </div>\n            <Snackbar \n            anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }} className={classes.snackbar}\n            open={open} autoHideDuration={3000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity={success}>\n                    {message}\n                </Alert>\n            </Snackbar>\n        </div>\n    )\n}\n\n\nexport default Contact; "],"sourceRoot":""}